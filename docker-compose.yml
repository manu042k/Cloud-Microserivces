version: '3'

services:
  user-management-service:
    build:
      context: ./UserManagmentService.API
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      DB_HOST: "user_db"
      DB_PORT: "5432"
      DB_USER: "${DB_USER}"
      DB_PASSWORD: "${DB_PASSWORD}"
      DB_NAME: "${DB_NAME}"
      JWT_SECRET: "${JWT_SECRET}"
    depends_on:
      user_db:
        condition: service_healthy
    networks:
      - my_custom_network

  user_db:
    image: postgres:latest
    environment:
      POSTGRES_USER: "${DB_USER}"
      POSTGRES_PASSWORD: "${DB_PASSWORD}"
      POSTGRES_DB: "${DB_NAME}"
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - my_custom_network
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${DB_USER}"]
      interval: 10s
      retries: 5
      timeout: 5s

  training-session-management-service:
    build:
      context: ./TrainingSessionManagementService.API
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    environment:
      DB_HOST: "session_db"
      DB_PORT: "5432"
      DB_USER: "${SESSION_DB_USER}"
      DB_PASSWORD: "${SESSION_DB_PASSWORD}"
      DB_NAME: "${SESSION_DB_NAME}"
      JWT_SECRET: "${JWT_SECRET}"
    depends_on:
      session_db:
        condition: service_healthy
    networks:
      - my_custom_network

  session_db:
    image: postgres:latest
    environment:
      POSTGRES_USER: "${SESSION_DB_USER}"
      POSTGRES_PASSWORD: "${SESSION_DB_PASSWORD}"
      POSTGRES_DB: "${SESSION_DB_NAME}"
    ports:
      - "5433:5432"
    volumes:
      - session_db_data:/var/lib/postgresql/data
    networks:
      - my_custom_network
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${SESSION_DB_USER}"]
      interval: 10s
      retries: 5
      timeout: 5s

  workout-recommendation-service:
    build:
      context: ./WorkOutRecommdationService.API
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - ENVIRONMENT=development
      - GROQ_API_KEY=${GROQ_API_KEY}
    networks:
      - my_custom_network

  nginx-proxy:
    image: nginx:latest
    container_name: nginx-proxy
    ports:
      - "80:80"
    volumes:
      - ./APIGateway/nginx.conf:/etc/nginx/conf.d/default.conf  
    depends_on:
      - user-management-service
      - training-session-management-service
      - workout-recommendation-service
      - user_db
      - session_db
    networks:
      - my_custom_network

  shell-service:
    build: 
      context: ./UiLayer
      dockerfile: Dockerfile.shell
    ports:
      - "4200:80" 
    depends_on:
      - about-service
    networks:
      - my_custom_network

  about-service:
    build: 
      context: ./UiLayer
      dockerfile: Dockerfile.about
    ports:
      - "4201:80" 
    networks:
      - my_custom_network

volumes:
  db_data:
    driver: local
  session_db_data:
    driver: local

networks:
  my_custom_network:
    driver: bridge
