version: '3'

services:
  user-management-service:
    build:
      context: ./UserManagmentService.API
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      DB_HOST: "user_db"
      DB_PORT: "5432"
      DB_USER: "user"
      DB_PASSWORD: "password"
      DB_NAME: "userservice"
      JWT_SECRET: "your_jwt_secret_key_here"
    depends_on:
      - user_db

  user_db:
    image: postgres:latest
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: userservice
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data

  training-session-management-service:
    build:
      context: ./TrainingSessionManagementService.API
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    environment:
      DB_HOST: "session_db"
      DB_USER: "user"
      DB_PASSWORD: "password"
      DB_NAME: "trainingsessionservice"
      JWT_SECRET: "your_jwt_secret_key_here"
    depends_on:
      - session_db

  session_db:
    image: postgres:latest
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: trainingsessionservice
    ports:
      - "5433:5432"
    volumes:
      - session_db_data:/var/lib/postgresql/data


  workout-recommdation-service:
    build:
      context: ./WorkOutRecommdationService.API
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - ENVIRONMENT=development

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:latest
    ports:
      - "9093:9093"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper

volumes:
  db_data:
    driver: local
  session_db_data:
    driver: local
